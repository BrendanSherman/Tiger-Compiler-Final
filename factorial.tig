/* factorial.tig: Print input number's factorial until non-numeric input detected */
/* Authors: Brendan Sherman - shermabk@bc.edu, Julia Finn - finnju@bc.edu */

let
    /* Borrowed from merge.tig, returns 1 if c is in the range of digits 0-9 */
    function isdigit(c : string) : int =
        ord(c) >= ord("0") & ord(c) <= ord("9")
    
    /* Using getchar on consecutive digits, compute their integer value */
    function getint() : int =
        let
            var num := 0
            var c := getchar()
        in
            while isdigit(c) do (
                num := num * 10 + ord(c) - ord("0");
                c := getchar()
            );
            num
        end

    /* Recursively compute remainders to print digits of n from left to right */
    function printint(n : int) =
        if n > 0 then (
            if n / 10 > 0 then printint(n / 10);
            print(chr(n - n / 10 * 10 + ord("0")))
        ) 

    /* Recursively compute factorial for given int with base case 0 */
    function fact(n : int) : int =
        if n = 0 then 1 else n * fact(n-1)

    /* Execution loop, seperated to enable initial print() calls */
    function main_loop() = 
        let
            var n := getint()
        in
            while n > 0 do (
                printint(n);
                print("! = ");
                printint(fact(n));
                print("\n");
                n := getint()
            )
        end
in
    /* entry point */ 
    print("Factorial Program\n");
    print("Enter a Positive Integer.\n");
    print("Enter non-numeric text (or nothing) to quit.\n");
    main_loop()
end

