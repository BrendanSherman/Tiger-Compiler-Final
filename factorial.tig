/* factorial.tig: Print input number's factorial until non-numeric input detected */
/* Authors: Brendan Sherman (shermabk@bc.edu), Julia Finn (finnju@bc.edu) */

let
    var buffer := getchar()

    /* Taken from merge.tig, checks whether character is digit */
    function isdigit(s: string): int =
        ord(s) >= ord("0") & ord(s) <= ord("9")

    /* Taken from merge.tig, parses numeric value from string of consecutive characters */
    function readint(): int =
        let
            var i := 0
            function skipto() =
                while buffer = " " | buffer = "\n"
                    do buffer := getchar()
        in
            skipto();
            while isdigit(buffer)
                do (
                    i := i * 10 + ord(buffer) - ord("0");
                    buffer := getchar()
                );
            i
        end

    /* Recursively calculates factorial of input number with base case 0 */
    function factorial(n: int): int =
        if n = 0 then 1 else n * factorial(n - 1)

    /* Prints numeric value of integer input */
    function printint(i: int) =
        let
            function f(i: int) =
                if i > 0 then (
                    f(i / 10);
                    print(chr(i - i / 10 * 10 + ord("0")))
                )
        in
            if i < 0 then (
                print("-");
                f(-i)
            )
            else if i > 0 then f(i)
            else print("0")
        end

    /* Program loop */
    function main_loop() =
        let
            var input := 0
        in
            print("Factorial Program\n");
            while 1 do (
                print("Enter a number (or a non-numeric character to quit): ");
                input := readint();
                if isdigit(buffer) then (
                    printint(input);
                    print("! = ");
                    printint(factorial(input));
                    print("\n")
                ) else (
                    print("Non-numeric input detected. Exiting...\n");
                    break
                )
            )
        end
in
    main_loop()
end